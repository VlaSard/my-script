#! /usr/bin/env bash
# shellcheck disable=SC2086

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# PDF Service Menu
# author: VlaSard
# github: https://github.com/VlaSard
# pdf_service_menu
#
# DESCRIPTION:
#   pdf_service_menu - обработка pdf файлов из контекстного меню.
#
# REVIEWS:
#       pdftk;
#       pdfinfo;
#       pdftoppm;
#       kdialog;
#       zenity;
#       notify-send.
#
# USAGE:
#   pdf_service_menu <action> <files>
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# -=-=-=-=-=-=-= VARIABLES =-=-=-=-=-=-=-
action="${1}"
shift
workdir="${1%/*}"
[ ! -d "${workdir}" ] && workdir="./"
filename="${1##*/}"
basefilename="${filename%.*}"
action_title=""
action_finish=""
script_name="${0##*/}"
script_name=${script_name//_/" "}

# -=-=-=-=-=-=-= MESSAGES =-=-=-=-=-=-=-=-
# message select_dir
msg_select_dir="Выберите каталог назначения..."
msg_select_savefile="Выберите файл для сохранения..."
msg_notify_title="Dolphin"
msg_notify_err="Операция отменена"

# message burst
msg_burst_progressTitle="Разбираем документ"
msg_burst_progress="Разбираем доумент \"${filename}\" на страницы."
msg_burst_notifyTitle="Извлечение..."
msg_burst_notify="Документ успешно разобран на страницы."

# message extpract
msg_extract_pageTitle="Страницы для извлечения..."
msg_extract_page="Диапазон страниц, для извлечения из документа\n\"${filename}\"\n\nИнструкция:\n\n1-endodd - извлечение только нечетных страниц из документа;\n1-endeven - извлечение только четных страниц из документа;\n1-end - извлечение всех страниц из документа;\n1-5 - извлечение диапазона страниц с 1 по 5;\n1 3 7-12 - извлечение страниц 1, 3 и с 7 по 12.\n\nСтраницы будут сохранены в заданном порядке.\nВведите диапазон извлечения страниц:"
msg_extract_progressTitle="Извлекаем страницы"
msg_extract_progress="Извлекаем страницы из документа \"${filename}\""
msg_extract_notifyTitle="Извлечение..."
msg_extract_notify="Страницы из документа успешно извлечены."

# message remove
msg_remove_title="Удалить страницы..."
msg_remove_progress="Удаляем страницы из документа\n\"${filename}\""
msg_remove_notifyTitle="Удаление страниц..."
msg_remove_notify="Страницы из документы успешно удалены."
msg_remove_range="Диапазон страниц для удаления из документа\n\"${filename}\"\n\nИнструкция:\n\nКлючевое слово \"end\" может использоваться, чтобы сослаться на заключительную\nстраницу документа, вместо номера страницы. Сошлитесь на одну страницу, опуская\nномер конечной страницы.\n\nПримеры:\n\n2 - удалить страницу 2;\n3-45 - удалить страницы с 3 по 45;\n5-end - удалить страницы с 5 по полседнюю.\n\nВведите диапазон страниц для удаления:"
msg_remove_err="Не удается удалить все страницы из документа!"

# message cat
msg_cat_title="Объединение документов..."
msg_cat_progress="Объединяем документы"
msg_cat_notify="Документы успешно объеденены."
msg_cat_err="Невозможно объединить только один файл. Пожалуйста, выберите не менее двух файлов."

# message add
msg_add_pdftoadd="Открыть документы для добавления..."
msg_add_progressTitle="Добавление документа"
msg_add_progress="Добавление документа к \"${filename}\""
msg_add_notifyTitle="Добавить страницы..."
msg_add_notify="Страницы успешно добавлены в документ."

# message stamp
msg_stamp_OpenFile="Выберите файл штампа..."
msg_stamp_title="Штамп на страницы..."
msg_stamp_combobox="Выберите вариант размещения штампа на страницах документа\n\nmultistamp - поставить разные штампы на страницы\nstamp - на всех страницах одинаковый штамп\n"
msg_stamp_progress="Добавление штампа на страницы документа \"${filename}\""
msg_stamp_notify="Штамп на страницах документа поставлен."

# message pdf2ipj
msg_pdf2jpg_title="Извлечь страницы..."
msg_pdf2jpg_notify="Страницы успешно конвертированы в jpg."
msg_pdf2jpg_progress="Конвертируем страницы документа в jpg"

msg_info_title="Информация о..."

# -=-=-=-=-=-=-= FUNCTIONS =-=-=-=-=-=-=-
# разобрать документ на страницы
burst() {
    selectdir="$(kdialog --icon viewpdf --title "${msg_select_dir}" --getexistingdirectory "${workdir}")" || return 1

    local dirname="${selectdir}/${basefilename}"
    [ -d "${dirname}" ] || mkdir "${dirname}"

    (pdftk "${@}" burst output "${dirname}/pg_%04d.pdf") | zenity --progress --title "${msg_burst_progressTitle}" --text "${msg_burst_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    [ -f "${dirname}/doc_data.txt" ] && rm "${dirname}/doc_data.txt"

    action_title="${msg_burst_notifyTitle}"
    action_finish="${msg_burst_notify}"
    return
}

# извлечь страницы из документа
extract() {
    pagerange="$(kdialog --icon viewpdf --title "${msg_extract_pageTitle}" --inputbox "${msg_extract_page}" "1-end")" || return 1

    selectsavefile="$(kdialog --icon viewpdf --title "${msg_select_savefile}" --getsavefilename "${workdir}/${basefilename}_(extract_page)" application/pdf)" || return 1

    (pdftk "${@}" cat $pagerange output "${selectsavefile}") | zenity --progress --title "${msg_extract_progressTitle}" --text "${msg_extract_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_extract_notifyTitle}"
    action_finish="${msg_extract_notify}"
    return
}

# удалить диапазон страниц из документа
remove() {
    range="$(kdialog --icon viewpdf --title "${msg_remove_title}" --inputbox "${msg_remove_range}" "2-end")" || return 1

    # удалить пробелы
    range="${range//" "/}"

    # получить номер последней страницы документа
    totalpages="$(pdftk "${@}" dump_data | grep "NumberOfPages" | cut -d" " -f 2-)"

    # проверить начальный диапазон страниц
    # использовать строку перед последним символом -
    first="${range%-*}"
    if [ "${first}" = "end" ]; then
        first="${totalpages}"
    else
        # удалить не числовые символы
        first="${first//[^[0-9]]/}"
        if [ -z "${first}" ]; then
            first=1
        else
            if [ "${first}" -eq 0 ]; then
                first=1
            elif [ "${first}" -gt "${totalpages}" ]; then
                first="${totalpages}"
            fi
        fi
    fi

    # проверить конечный диапазон страниц
    # использовать строку после последнего символа -
    last="${range#*-}"
    if [ "${last}" = "end" ]; then
        last="${totalpages}"
    else
        # удалить не числовые символы
        last="${last//[^[0-9]]/}"
        if [ -z "${last}" ]; then
            last="${totalpages}"
        elif [ "${last}" -lt "${first}" ]; then
            last="${first}"
        elif [ "${last}" -gt "${totalpages}" ]; then
            last="${totalpages}"
        fi
    fi

    # проверка диапазона удаляемых страниц first >= 1 and last <= totalpages
    # определяем диапазон страниц range1
    if [ "${first}" -eq 1 ]; then
        range1=''
    elif [ "${first}" -eq 2 ]; then
        range1="1"
    else
        range1="1-$((first - 1))"
    fi

    # определяем диапазон страниц range2
    if [ "${last}" -eq "${totalpages}" ]; then
        range2=''
    elif [ "${last}" -eq "$((totalpages - 1))" ]; then
        range2="${totalpages}"
    else
        range2="$((last + 1))-${totalpages}"
    fi

    # если пытаются удалить все страницы выводим сообщение об ошибке
    [[ "${range1}" = "${range2}" ]] &&
        kdialog --icon viewpdf --title "${msg_remove_title}" --sorry "${msg_remove_err}" &&
        return 1

    selectsavefile="$(kdialog --icon viewpdf --title "${msg_select_savefile}" --getsavefilename "${workdir}/${basefilename} (страницы)" application/pdf)" || return 1

    (pdftk "${@}" cat $range1 $range2 output "${selectsavefile}") | zenity --progress --title "${msg_remove_title}" --text "${msg_remove_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_remove_notifyTitle}"
    action_finish="${msg_remove_notify}"
    return
}

# объединить документы
cat() {
    [[ ${#} -lt 2 ]] &&
        kdialog --icon viewpdf --title "${msg_cat_title}" --sorry "${msg_cat_err}" &&
        return 1

    selectsavefile="$(kdialog --icon viewpdf --title "${msg_select_savefile}" --getsavefilename "${workdir}/${workdir} (объединение)" application/pdf)" || return 1

    (pdftk "${@}" cat output "${selectsavefile}") | zenity --progress --title "${msg_cat_title}" --text "${msg_cat_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_cat_title}"
    action_finish="${msg_cat_notify}"
    return
}

# добавить выбранные документы (в порядке выбора)
add() {
    pdftoadd=("$(kdialog --icon viewpdf --title "${msg_add_pdftoadd}" --multiple --getopenfilename "${workdir}" application/pdf)") || return 1

    local filename="${workdir}/${workdir} (добавление)"

    selectsavefile="$(kdialog --icon viewpdf --title "${msg_select_savefile}" --getsavefilename "${filename}" application/pdf)" || return 1

    (pdftk "${@}" "${pdftoadd[@]}" output "${selectsavefile}") | zenity --progress --title "${msg_add_progressTitle}" --text "${msg_add_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_add_notifyTitle}"
    action_finish="${msg_add_notify}"
    return
}

# добавить штамп на страницы документа
stamp() {
    selectopenfile="$(kdialog --icon viewpdf --title "${msg_stamp_OpenFile}" --getopenfilename "${workdir}" application/pdf)" || return 1

    selectsavefile="$(kdialog --icon viewpdf --title "${msg_select_savefile}" --getsavefilename "${workdir}/${basefilename} (stamped)" application/pdf)" || return 1

    stamped="$(kdialog --icon viewpdf --title "${msg_stamp_title}" --combobox "${msg_stamp_combobox}" multistamp stamp)" || return 1

    (pdftk "${@}" "${stamped}" "${selectopenfile}" output "${selectsavefile}") | zenity --progress --title "${msg_stamp_title}" --text "${msg_stamp_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_stamp_title}"
    action_finish="${msg_stamp_notify}"
    return
}

# преобразовать страницы документа в jpg
pdf2jpg() {
    selectdir="$(kdialog --icon viewpdf --title "${msg_select_dir}" --getexistingdirectory "${workdir}")" || return 1

    local dirname="${selectdir}/${basefilename}"
    [ -d "${dirname}" ] || mkdir "${dirname}"

    (pdftoppm -jpeg -r 300 "${@}" "${dirname}/pg") | zenity --progress --title "${msg_pdf2jpg_title}" --text "${msg_pdf2jpg_progress}" --pulsate --width=500 --no-cancel --auto-close --auto-kill

    action_title="${msg_pdf2jpg_title}"
    action_finish="${msg_pdf2jpg_notify}"
    return
}

# отображение информации о документе
info() {
    msg_info_text="$(pdfinfo "${@}" && echo ' ')"

    kdialog --icon viewpdf --title "${msg_info_title}" --msgbox "${msg_info_text}"

    return
}

# -=-=-=-=-=-=-=-= MAIN  =-=-=-=-=-=-=-=-
# проверка наличия параметров запуска, если нет выходим с ошибкой 1
[ -z "${*}" ] &&
    echo "Параметры не заданы." &&
    exit 1

cd "${workdir}" || exit 1
"${action}" "${@}"

# вывод всплывающего сообщение о завершении
if [ $? -eq 1 ]; then
    notify-send -t 5000 -i emblem-important -a "${msg_notify_title}" "${script_name}" "${msg_notify_err}"
else
    notify-send -t 5000 -i emblem-success -a "${msg_notify_title}" "${action_title}" "${action_finish}"
fi

cd - || exit 1

exit 0
